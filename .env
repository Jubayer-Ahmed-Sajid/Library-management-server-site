DB_USER = assignment-11
DB_PASS = QbDhBEjGhvJUMFZF
ACCESS_TOKEN_SECRET = 6456c2d01c492af088db3c2f6235b0f4f0c46396b2e5401e684acf8b47ffefbc4bf821a6faf9282075864a76773f565c3202815d9f3a8eb29995791ec7e14372 




app.put('/allBooks/:category/:id', async (req, res) => {
  try {
    const id = req.params.id;
    const book = req.body;

    // Ensure the quantity is greater than 0 before updating
    if (book.quantity > 0) {
      const filter = { _id: new ObjectId(id) };
      const options = { upsert: true };

      // Update operation
      const updatedDoc = {
        $set: {
          quantity: book.quantity - 1,
          // Add other fields to update if needed
        },
      };

      // Perform the update
      const result = await YourBookModel.updateOne(filter, updatedDoc, options);

      if (result.matchedCount > 0) {
        res.json({ message: 'Book updated successfully' });
      } else {
        res.status(404).json({ message: 'No matching document found' });
      }
    } else {
      res.status(400).json({ message: 'Invalid quantity value' });
    }
  } catch (error) {
    res.status(500).json({ message: 'Error updating book' });
  }
});
